/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/

.page {
  min-inline-size: 320px;
  min-block-size: 100dvb;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: var(--mainFont, Inter), arial, sans-serif;
  font-size: 18px;
  font-variation-settings: 'wght' var(--textWeight,410), 'slnt' var(--textStyle,0);
  background-image: repeating-linear-gradient(90deg, var(--gradientLineMainColor, #d3d3d3) 0 1px, var(--gradientLineAccentColor, #d3d3d300) 2px 4px),
                    repeating-linear-gradient(180deg,  var(--gradientLineMainColor, #d3d3d3) 0 1px, var(--gradientLineAccentColor, #d3d3d300) 2px 4px),
                    linear-gradient(180deg,var( --gradientMainColor, #e7e7e7), var(--gradientAccentColor, #1a1a1a));
  background-attachment: fixed;
  background-size: cover;
  color: var(--mainTextColor, #000);
}

.page::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.page::-webkit-scrollbar-track {
  background-image: linear-gradient(180deg,var( --gradientMainColor, #e7e7e7), var(--gradientAccentColor, #1a1a1a));
}

.page::-webkit-scrollbar-thumb {
  --mainTextColor: #696969;
  background-color: var(--mainTextColor);
  border-radius: 5px;
}

@media (width < 768px) and (orientation: landscape) {
  .page {
    inline-size: 100dvi;
  }
}

.header {
  font-family: var(--accentFont, 'PressStart2P'), arial, sans-serif;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  inline-size: var(--clampInlineSize, 375px);
  padding-block-end: 122px;
  border: 2px solid var(--borderColor, #000);
  text-transform: uppercase;
  background-color: var(--backgroundColor, #fff);
  margin-block: 98px;
}

.header__theme-menu-list {
  display: flex;
  flex-direction: row;
  gap: 1em;
  margin-block: 50px;
  font-size: clamp(0.625rem, 0.493rem + 0.5634vw, 1rem);
}

.header .header__theme-menu-button {
  padding: 10px;
}

.header .header__theme-menu-button_active {
  outline: 2px solid var(--borderColor);
}

.pageTitle {
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

.pageSubtitle {
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

.main {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
  padding-block-end: 98px;
}

.card {
  display: flex;
  flex-direction: column;
  inline-size: var(--clampInlineSize, 375px);
  grid-column: 2;
  border: 2px solid var(--borderColor, #000);
  background-color: var(--backgroundColor, #fff);
}

.cardTitle {
  font-size: 18px;
  font-variation-settings: 'wght' var(--titleWeight, 410), 'slnt' var(--textStyle, 0);
  line-height: 110%;
  padding-inline: 10px;
  padding-block: 6px;
}

.cardImageContainer {
  position: relative;
  border-block: 2px solid var(--borderColor, #000);
  font-size: 0;
}

.cardLabel {
  --mainTextColor: #000;
  --borderColor:#fff;
  position: absolute;
  inset-inline-end: 25px;
  inset-block-start: 25px;
  font-family: var(--accentFont, 'PressStart2P');
  font-size: 14px;
  text-transform: uppercase;
  color: var(--mainTextColor);
  opacity: 0.5;
  mix-blend-mode: hard-light;
  z-index: 1;
  text-shadow: -1px 0px var(--borderColor),
                0 1px var(--borderColor),
                1px 0 var(--borderColor),
                0 -1px var(--borderColor);
}

@supports (-webkit-text-stroke: 1px #fff) {
  .cardLabel {
    text-shadow: none;
    -webkit-text-stroke: 1px var(--borderColor);
  }
}

.cardImage {
  inline-size: 100%;
  object-fit: cover;
  object-position: center;
}

.blur {
  filter: blur(10px);
}

.contranst {
  filter: contrast(2.5);
}

.grayscale {
  filter: grayscale(1);
}

.hueRotate {
  filter: hue-rotate(0.2turn);
}

.hueRotateSaturate {
  filter: saturate(2) hue-rotate(0.3turn);
}

.invert {
  filter: invert(100%);
}

.saturate {
  filter: saturate(2);
}

.sepia {
  filter: sepia(1);
}

.cardText {
  padding-inline: 25px;
  padding-block-start: 25px;
}

.quote {
--textStyle: -15;
 font-variation-settings: 'wght' var(--textWeight, 410), 'slnt' var(--textStyle, -15);
}

.buttonsContainer {
  display: flex;
  flex-direction: row;
  justify-content: end;
  align-items: center;
  gap: 5px;
  margin-block: 25px;
  margin-inline-end: 25px;
}

.button {
  position: relative;
  padding: 0;
  margin: 0;
  background: inherit;
  border: 2px solid var(--borderColor, #000);
  transition: outline 0.3s ease, box-shadow 0.3s ease;
  color: var(--mainTextColor, #000);
}

.button::before {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--backgroundColor, #fff);
  mix-blend-mode: difference;
  transform-origin: left;
  transform: scaleX(0);
  transition: transform 0.5s ease-in-out;
}

.button:hover::before {
  transform: scaleX(1);
}

.button:focus {
  outline-color: transparent;
}

.button:focus-visible {
  box-shadow: 2px 2px var(--borderColor, #000);
  outline: none;
}

.button:hover {
  cursor: pointer;
}

.card__icon-button {
  border: none;
  outline: 2px solid transparent;
  outline-offset: -3px;
  padding-block-start: 2px;
}

.card__icon-button.button::before {
  display: none;
}

.card__icon-button:focus-visible {
  box-shadow: none;
  outline: 2px solid var(--borderColor, #000);
  transition: outline 0.3s ease;
  
}

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: scaling 0.3s 0.1s ease-in;
}

.contour {
  transition: fill 0.1s linear 0s;
}

.like-icon.is-liked .contour {
  --counterColor: red;
  transition: fill 0.3s linear 0.06s;
}

.mainBody {
  transition: fill 0.3s linear 0s;
}

.card__icon-button:hover .mainBody {
  --mainBodyColor: #000;
  transition: fill 0.3s linear 0.05s;
}

.card__icon-button:active .mainBody {
  --mainBodyColor: red;
  transition: fill 0.3s linear 0.05s;
}

.like-icon.is-liked .mainBody {
  --mainBodyColor: red;
  transition: fill 0.3s linear 0.05s;
}

.core {
  transition: fill 0.3s linear 0.03s;
}

.card__icon-button:hover .core {
  --coreColor: #000;
  transition: fill 0.3s linear 0s;
}

.card__icon-button:active .core {
  --coreColor: red;
  transition: fill 0.3s linear 0s;
}

.like-icon.is-liked .core {
  --coreColor: red;
  transition: fill 0.3s linear 0s;
}

.sparks {
  opacity: 0;
}

.like-icon.is-liked .sparks {
  animation: fadeIn 0.3s 0.3s ease-in;
}

.card__like-button {
  min-inline-size: 130px;
  min-block-size: 38px;
}

.button__text {
  align-self: center;
  font-family: var(--accentFont, 'PressStart2P');
  font-size: 14px;
  line-height: 90%;
  text-transform: capitalize;
}

.saveButton {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 8px;
  justify-content: center;
  align-items: center;
  padding-inline: 16px;
  padding-block: 15px;
  background-color: var(--backgroundColor, #fff);
  inline-size: clamp(19.125rem, 18.4866rem + 2.7238vw, 20.938rem);
}

.saveButton .button__text {
  text-transform: none;
}

.svgButton {
  display: block;
  inline-size: clamp(21px, calc(30.465px - 0.657vw), 28px);
  block-size: clamp(21px, calc(30.465px - 0.657vw), 28px);
}

.dialog {
  display: none;
  flex-direction: column;
  gap: 30px;
  font-family: var(--accentFont, 'PressStart2P');
  font-size: 14px;
  max-inline-size: clamp(341px, calc(336.61px + 1.171vw), 353px);
  padding-block: 30px;
  padding-inline: 30px;
  text-transform: uppercase;
  background-color: var(--backgroundColor);
  color: var(--mainTextColor);
}

.dialog[open] {
  display: flex;
}

.dialog::backdrop {
  background-color: #000000;
  opacity: 75%;
}

.dialogContent {
  display:grid;
  gap: 20px;
  align-items: center;
}

.svgDialog {
  grid-column: 1;
  inline-size: 39px;
  block-size: 39px;
}

.dialogTitle {
  grid-column: 2;
  font-size: 14px;
  line-height: 150%;
  letter-spacing: 0;
}

.closeDialogButton {
  padding-inline: 116.5px;
  padding-block: 11px;
  line-height: 90%;
  text-transform: uppercase;
}